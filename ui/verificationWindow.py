# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\zhang\OneDrive\Code\SR\ui\verificationWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets

url = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))  # 文件夹


class Ui_Ver_Dialog(object):
    def setupUi(self, Ver_Dialog):
        Ver_Dialog.setObjectName("Ver_Dialog")
        Ver_Dialog.resize(1080, 580)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(os.path.join(url, "./resource/icons/neu.png")), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        Ver_Dialog.setWindowIcon(icon)
        Ver_Dialog.setStyleSheet("background-color: rgb(240, 240, 240); ")





        self.start_button = QtWidgets.QPushButton(Ver_Dialog)
        self.start_button.setGeometry(QtCore.QRect(600, 40, 100, 60))
        self.start_button.setAutoFillBackground(False)
        self.start_button.setStyleSheet("QPushButton#start_button {"
                                        "background-color: rgb(63, 152, 220);"
                                        "color: white;"
                                        "font-size: 18px;"
                                        "font-weight: bold;"
                                        "border: 2px solid white;"
                                        "border-radius: 10px;"
                                        "}"
                                        "QPushButton#start_button:hover {"
                                        "background-color: white;"
                                        "color: #4CAF50;"
                                        "}")
        self.start_button.setCheckable(False)
        self.start_button.setObjectName("start_button")

        self.encoding_button = QtWidgets.QPushButton(Ver_Dialog)
        self.encoding_button.setGeometry(QtCore.QRect(730, 40, 150, 60))
        self.encoding_button.setAutoFillBackground(False)
        self.encoding_button.setStyleSheet("QPushButton#encoding_button {"
                                           "background-color: rgb(63, 152, 220);"
                                           "color: white;"
                                           "font-size: 18px;"
                                           "font-weight: bold;"
                                           "border: 2px solid white;"
                                           "border-radius: 10px;"
                                           "}"
                                           "QPushButton#encoding_button:hover {"
                                           "background-color: white;"
                                           "color: #4CAF50;"
                                           "}")
        self.encoding_button.setCheckable(False)
        self.encoding_button.setObjectName("encoding_button")

        self.syn_button = QtWidgets.QPushButton(Ver_Dialog)
        self.syn_button.setGeometry(QtCore.QRect(900, 40, 150, 60))
        self.syn_button.setAutoFillBackground(False)
        self.syn_button.setStyleSheet("QPushButton#syn_button {"
                                      "background-color:rgb(63, 152, 220);"
                                      "color: white;"
                                      "font-size: 18px;"
                                      "font-weight: bold;"
                                      "border: 2px solid white;"
                                      "border-radius: 10px;"
                                      "}"
                                      "QPushButton#syn_button:hover {"
                                      "background-color: white;"
                                      "color: #4CAF50;"
                                      "}")

        self.syn_button.setCheckable(False)
        self.syn_button.setObjectName("syn_button")


        self.layoutWidget1 = QtWidgets.QWidget(Ver_Dialog)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 30, 555, 93))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget1)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")

        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")


        #self.config_button = QtWidgets.QPushButton(self.layoutWidget1)
        #self.config_button.setStyleSheet("background-color: rgb(225, 225, 225);\n"
                                       #  "selection-background-color: rgb(229, 241, 251);")
        #self.config_button.setObjectName("config_button")
        #self.gridLayout.addWidget(self.config_button, 2, 1, 1, 1)

        self.policy_button = QtWidgets.QPushButton(self.layoutWidget1)
        self.policy_button.setStyleSheet("background-color: rgb(225, 225, 225);\n"
                                         "selection-background-color: rgb(229, 241, 251);")
        self.policy_button.setObjectName("policy_button")
        self.gridLayout.addWidget(self.policy_button, 1, 1, 1, 1)
        #self.config_lineEdit = QtWidgets.QLineEdit(self.layoutWidget1)
        # self.config_lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        # self.config_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        # self.config_lineEdit.setReadOnly(True)
        # self.config_lineEdit.setObjectName("config_lineEdit")
        # self.gridLayout.addWidget(self.config_lineEdit, 2, 0, 1, 1)
        self.policy_lineEdit = QtWidgets.QLineEdit(self.layoutWidget1)
        self.policy_lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.policy_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.policy_lineEdit.setReadOnly(True)
        self.policy_lineEdit.setObjectName("policy_lineEdit")
        self.gridLayout.addWidget(self.policy_lineEdit, 1, 0, 1, 1)
        self.topo_lineEdit = QtWidgets.QLineEdit(self.layoutWidget1)
        self.topo_lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.topo_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.topo_lineEdit.setReadOnly(True)
        self.topo_lineEdit.setObjectName("topo_lineEdit")
        self.gridLayout.addWidget(self.topo_lineEdit, 0, 0, 1, 1)
        self.topo_button = QtWidgets.QPushButton(self.layoutWidget1)
        self.topo_button.setStyleSheet("background-color: rgb(225, 225, 225);\n"
                                       "selection-background-color: rgb(229, 241, 251);")
        self.topo_button.setObjectName("topo_button")
        self.gridLayout.addWidget(self.topo_button, 0, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)

        self.layoutWidget2 = QtWidgets.QWidget(Ver_Dialog)
        self.layoutWidget2.setGeometry(QtCore.QRect(10, 150, 510, 400))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.layoutWidget2)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")

        self.label = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.input_browser = QtWidgets.QTextBrowser(self.layoutWidget2)
        self.input_browser.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.input_browser.setObjectName("input_browser")
        self.gridLayout_3.addWidget(self.input_browser, 1, 0, 1, 1)
        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)




        self.label2 = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label2.setFont(font)
        self.label2.setObjectName("label2")
        self.gridLayout_3.addWidget(self.label2, 2, 0, 1, 1)
        self.input_browser2 = QtWidgets.QTextBrowser(self.layoutWidget2)
        self.input_browser2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.input_browser2.setObjectName("input_browser2")
        self.gridLayout_3.addWidget(self.input_browser2, 3, 0, 1, 1)



        self.layoutWidget = QtWidgets.QWidget(Ver_Dialog)
        self.layoutWidget.setGeometry(QtCore.QRect(550, 150, 510, 401))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")

        self.label_2 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout_4.addWidget(self.label_2, 0, 0, 1, 1)

        self.output_browser = QtWidgets.QTextBrowser(self.layoutWidget)
        self.output_browser.setAutoFillBackground(True)
        self.output_browser.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.output_browser.setObjectName("output_browser")
        self.gridLayout_4.addWidget(self.output_browser, 1, 0, 1, 1)



        self.retranslateUi(Ver_Dialog)
        QtCore.QMetaObject.connectSlotsByName(Ver_Dialog)

    def retranslateUi(self, Ver_Dialog):
        _translate = QtCore.QCoreApplication.translate
        Ver_Dialog.setWindowTitle(_translate("Ver_Dialog", "SRv6配置综合"))
        self.start_button.setText(_translate("Ver_Dialog", "读取"))
        self.encoding_button.setText(_translate("Ver_Dialog", "SRv6路径编码"))
        self.syn_button.setText(_translate("Ver_Dialog", "SRv6配置综合"))
        self.label_2.setText(_translate("Ver_Dialog", "输出结果："))
        self.output_browser.setDocumentTitle(_translate("Ver_Dialog", "输入信息"))
        #self.config_button.setText(_translate("Ver_Dialog", "打开"))
        self.policy_button.setText(_translate("Ver_Dialog", "打开"))
        #self.config_lineEdit.setText(_translate("Ver_Dialog", "请输入配置文件路径"))
        self.policy_lineEdit.setText(_translate("Ver_Dialog", "请输入配置意图文件路径"))
        self.topo_lineEdit.setText(_translate("Ver_Dialog", "请输入拓扑文件路径"))
        self.topo_button.setText(_translate("Ver_Dialog", "打开"))
        self.input_browser.setDocumentTitle(_translate("Ver_Dialog", "输入信息"))
        self.label.setText(_translate("Ver_Dialog", "输入信息："))

        self.input_browser2.setDocumentTitle(_translate("Ver_Dialog", "求解路径"))
        self.label2.setText(_translate("Ver_Dialog", "显示路径求解："))

